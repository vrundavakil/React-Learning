{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Learning\\\\React-Learning\\\\src\\\\Components\\\\Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = _ref => {\n  _s();\n\n  let {\n    optionArray,\n    onSelectedchange,\n    selected,\n    lable\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClicked = event => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener('click', onBodyClicked);\n    return () => {\n      document.body.removeEventListener('click', onBodyClicked);\n    };\n  }, []);\n  const renderOptions = optionArray.map(option => {\n    if (selected.value === option.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => {\n        onSelectedchange(option);\n      },\n      children: option.lable\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lable\",\n        children: [\" \", lable, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setOpen(!open);\n        },\n        className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [\" \", selected.lable, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `menu ${open ? 'visible transition' : ''}`,\n          children: renderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"wl9VvfhnMVWQ+kCekFjcRPEi3/0=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["D:/React-Learning/React-Learning/src/Components/Dropdown.js"],"names":["React","useEffect","useState","useRef","Dropdown","optionArray","onSelectedchange","selected","lable","open","setOpen","ref","onBodyClicked","event","current","contains","target","document","body","addEventListener","removeEventListener","renderOptions","map","option","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,MAAMC,QAAQ,GAAG,QAAuD;AAAA;;AAAA,MAAtD;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,gBAAf;AAAiCC,IAAAA,QAAjC;AAA0CC,IAAAA;AAA1C,GAAsD;AACpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGR,MAAM,EAAlB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,aAAa,GAAIC,KAAD,IAAW;AAC7B,UAAIF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAJ,EAAwC;AACpC;AACH;;AACDN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KALD;;AAMAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCP,aAAxC;AAEA,WAAO,MAAM;AAETK,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CR,aAA3C;AACH,KAHD;AAIH,GAbQ,EAaP,EAbO,CAAT;AAeA,QAAMS,aAAa,GAAGhB,WAAW,CAACiB,GAAZ,CAAgBC,MAAM,IAAI;AAC5C,QAAIhB,QAAQ,CAACiB,KAAT,KAAmBD,MAAM,CAACC,KAA9B,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,wBACI;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAyC,MAAA,OAAO,EAAE,MAAM;AACpDlB,QAAAA,gBAAgB,CAACiB,MAAD,CAAhB;AACH,OAFD;AAAA,gBAGKA,MAAM,CAACf;AAHZ,OAAUe,MAAM,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GAXqB,CAAtB;AAaA,sBACI;AAAK,IAAA,GAAG,EAAEb,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,wBAAyBH,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,OAAO,EAAE,MAAM;AAChBE,UAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,SAFD;AAGI,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAHrE;AAAA,gCAII;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,0BAAwBF,QAAQ,CAACC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAK,UAAA,SAAS,EAAG,QAAOC,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA,oBACKY;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAjDD;;GAAMjB,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nconst Dropdown = ({ optionArray, onSelectedchange, selected,lable }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        const onBodyClicked = (event) => {\r\n            if (ref.current.contains(event.target)) {\r\n                return;\r\n            }\r\n            setOpen(false);\r\n        };\r\n        document.body.addEventListener('click', onBodyClicked);\r\n\r\n        return () => {\r\n                    \r\n            document.body.removeEventListener('click', onBodyClicked);\r\n        };\r\n    },[]);\r\n\r\n    const renderOptions = optionArray.map(option => {\r\n        if (selected.value === option.value) {\r\n            return null\r\n        }\r\n        return (\r\n            <div key={option.value} className=\"item\" onClick={() => {\r\n                onSelectedchange(option)\r\n            }}>\r\n                {option.lable}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div ref={ref} className=\"ui form\">\r\n            <div className=\"field\">\r\n                <div className=\"lable\"> {lable} </div>\r\n                <div onClick={() => {\r\n                    setOpen(!open)\r\n                }}\r\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`} >\r\n                    <i className=\"dropdown icon\"></i>\r\n                    <div className=\"text\"> {selected.lable} </div>\r\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>\r\n                        {renderOptions}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}