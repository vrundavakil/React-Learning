{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Learning\\\\React-Learning\\\\src\\\\Components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useCountdown } from \"./useCountdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DateTimeDisplay = _ref => {\n  let {\n    value,\n    type,\n    isDanger\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDanger ? 'countdown danger' : 'countdown',\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DateTimeDisplay;\n\nconst CountdownTimer = () => {\n  _s();\n\n  const [days, hours, minutes, seconds] = useCountdown(new Date(\"2022-12-07 15:30:00\"));\n\n  if (days + hours + minutes + seconds <= 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expired-notice\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Expired!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a future date and time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-counter\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(CountdownTimer, \"k4nYSprLtbeXmgny6/HJFuVOyFU=\", false, function () {\n  return [useCountdown];\n});\n\n_c2 = CountdownTimer;\nexport default CountdownTimer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DateTimeDisplay\");\n$RefreshReg$(_c2, \"CountdownTimer\");","map":{"version":3,"sources":["D:/React-Learning/React-Learning/src/Components/CountdownTimer.js"],"names":["React","useEffect","useState","Fragment","useCountdown","DateTimeDisplay","value","type","isDanger","CountdownTimer","days","hours","minutes","seconds","Date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;;AAEA,MAAMC,eAAe,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAA8B;AACnD,sBACI;AAAK,IAAA,SAAS,EAAEA,QAAQ,GAAG,kBAAH,GAAwB,WAAhD;AAAA,4BACI;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;KAAMF,e;;AASN,MAAMI,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,OAAvB,IAAkCT,YAAY,CAAC,IAAIU,IAAJ,CAAS,qBAAT,CAAD,CAApD;;AAEA,MAAIJ,IAAI,GAAGC,KAAP,GAAeC,OAAf,GAAyBC,OAAzB,IAAoC,CAAxC,EAA2C;AACvC,wBAAO;AAAA,6BACH;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAMH,GAPD,MAOO;AACH,wBAAO;AAAA,6BACH;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAA,qBAAOH,IAAP,SAAgBC,KAAhB,SAA0BC,OAA1B,SAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAKH;AACJ,CAlBD;;GAAMJ,c;UAEsCL,Y;;;MAFtCK,c;AAoBN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useCountdown } from \"./useCountdown\";\r\n\r\nconst DateTimeDisplay = ({ value, type, isDanger }) => {\r\n    return (\r\n        <div className={isDanger ? 'countdown danger' : 'countdown'}>\r\n            <p>{value}</p>\r\n            <span>{type}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CountdownTimer = () => {\r\n\r\n    const [days, hours, minutes, seconds] = useCountdown(new Date(\"2022-12-07 15:30:00\"));\r\n\r\n    if (days + hours + minutes + seconds <= 0) {\r\n        return <>\r\n            <div className=\"expired-notice\">\r\n                <span>Expired!!!</span>\r\n                <p>Please select a future date and time.</p>\r\n            </div>\r\n        </>\r\n    } else {\r\n        return <>\r\n            <div className=\"show-counter\">\r\n                <span>{days} : {hours} : {minutes} : {seconds}</span>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default CountdownTimer"]},"metadata":{},"sourceType":"module"}