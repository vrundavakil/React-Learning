{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Learning\\\\React-Learning\\\\src\\\\Components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useCountdown } from \"./useCountdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction setCountdown(targetDate) {\n  _s();\n\n  const countDownDate = new Date(targetDate).getTime();\n  const [countDown, setCountDown] = useState(countDownDate - new Date().getTime());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [countDownDate]); // calculate time left\n\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(countDown % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(countDown % (1000 * 60 * 60) / (1000 * 60));\n  const seconds = Math.floor(countDown % (1000 * 60) / 1000);\n\n  if (days + hours + minutes + seconds <= 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expired-notice\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Expired!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a future date and time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-counter\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(setCountdown, \"+9zWhIOWADc8hK60aUgFV91+m8I=\");\n\nconst CountdownTimer = () => {\n  const dataList = [{\n    id: '1',\n    date: '2022-12-07 15:00:00'\n  }, {\n    id: '1',\n    date: '2022-12-07 15:15:00'\n  }, {\n    id: '1',\n    date: '2022-12-07 15:30:00'\n  }, {\n    id: '1',\n    date: '2022-12-07 15:45:00'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dataList.map(data => {\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: setCountdownData(new Date(data.date))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n};\n\n_c = CountdownTimer;\nexport default CountdownTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"sources":["D:/React-Learning/React-Learning/src/Components/CountdownTimer.js"],"names":["React","useEffect","useState","Fragment","useCountdown","setCountdown","targetDate","countDownDate","Date","getTime","countDown","setCountDown","interval","setInterval","clearInterval","days","Math","floor","hours","minutes","seconds","CountdownTimer","dataList","id","date","map","data","setCountdownData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useCountdown } from \"./useCountdown\";\r\n\r\nfunction setCountdown(targetDate) {\r\n\r\n    const countDownDate = new Date(targetDate).getTime();\r\n\r\n    const [countDown, setCountDown] = useState(countDownDate - new Date().getTime());\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCountDown(countDownDate - new Date().getTime());\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [countDownDate]);\r\n\r\n    // calculate time left\r\n    const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor(\r\n        (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n    if (days + hours + minutes + seconds <= 0) {\r\n        return <>\r\n            <div className=\"expired-notice\">\r\n                <span>Expired!!!</span>\r\n                <p>Please select a future date and time.</p>\r\n            </div>\r\n        </>\r\n    } else {\r\n        return <>\r\n            <div className=\"show-counter\">\r\n                <span>{days} : {hours} : {minutes} : {seconds}</span>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst CountdownTimer = () => {\r\n\r\n    const dataList = [\r\n        {\r\n            id: '1',\r\n            date: '2022-12-07 15:00:00',\r\n        }, {\r\n            id: '1',\r\n            date: '2022-12-07 15:15:00',\r\n        }, {\r\n            id: '1',\r\n            date: '2022-12-07 15:30:00',\r\n        }, {\r\n            id: '1',\r\n            date: '2022-12-07 15:45:00',\r\n        },\r\n\r\n    ];\r\n\r\n    return <div>\r\n        {dataList.map(data => {\r\n            <>\r\n                <div>{data.id}</div>\r\n                <div>{setCountdownData((new Date(data.date)))}</div>\r\n            </>\r\n        }\r\n        )}\r\n    </div>\r\n\r\n}\r\n\r\nexport default CountdownTimer"]},"metadata":{},"sourceType":"module"}