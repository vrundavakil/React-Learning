{"ast":null,"code":"import { ADD_ACTION, UPDATE_ACTION, REMOVE_ACTION, STATUS_UPDATE_ACTION, SORT, FILTER_UPDATE_ACTION, SHOWSELECT, ITEMLIST_UPDATE_ACTION, ACTIONOPTIONS } from './Constants';\nconst StoreData = {\n  ItemList: [{\n    id: 1,\n    name: 'abcd',\n    time: \"6/6/2022, 7:06:52 PM\",\n    status: false\n  }, {\n    id: 3,\n    name: 'mno',\n    time: \"7/6/2022, 7:06:52 PM\",\n    status: false\n  }, {\n    id: 5,\n    name: 'pqr',\n    time: \"10/6/2022, 7:06:52 PM\",\n    status: true\n  }, {\n    id: 8,\n    name: 'xyz',\n    time: \"15/6/2022, 7:06:52 PM\",\n    status: true\n  }],\n  Filters: {\n    Sort: SORT.AZ,\n    SearchedText: null,\n    Active: SHOWSELECT.ALL\n  }\n};\n\nconst Reducer = function () {\n  let Store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : StoreData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ACTION:\n      {\n        Store.ItemList.push({\n          id: Store.ItemList.length + 1,\n          name: action.AddDetails.NewValue,\n          time: new Date().toLocaleString(),\n          status: true\n        });\n        let FilteredItems = sortRecords(Store.ItemList, { ...Store.Filters,\n          SearchedText: null\n        });\n        return { ...Store,\n          ItemList: [...Store.ItemList],\n          FilteredItemList: [...FilteredItems],\n          Filters: { ...Store.Filters,\n            SearchedText: null\n          }\n        };\n      }\n\n    case UPDATE_ACTION:\n      {\n        Store.ItemList.forEach(Item => {\n          if (Item.id === action.UpdateDetails.EditDetails.id) {\n            Item.name = action.UpdateDetails.Updatevalue;\n          }\n        });\n        let FilteredItems = sortRecords(Store.ItemList, { ...Store.Filters,\n          SearchedText: null\n        });\n        return { ...Store,\n          ItemList: [...Store.ItemList],\n          FilteredItemList: [...FilteredItems]\n        };\n      }\n\n    case REMOVE_ACTION:\n      {\n        return { ...Store,\n          ItemList: Store.ItemList.filter(item => item.id !== action.RemoveDetails.id)\n        };\n      }\n\n    case STATUS_UPDATE_ACTION:\n      {\n        Store.ItemList.forEach(Item => {\n          if (Item.id === action.UpdateDetails.id) {\n            Item.status = !Item.status;\n          }\n        });\n        let FilteredItems = sortRecords(Store.ItemList, { ...Store.Filters,\n          SearchedText: null\n        });\n        return { ...Store,\n          ItemList: [...Store.ItemList],\n          FilteredItemList: [...FilteredItems]\n        };\n      }\n\n    case FILTER_UPDATE_ACTION:\n      {\n        if (action.UpdateFilterDetails.Sort) {\n          Store.Filters.Sort = action.UpdateFilterDetails.Sort;\n        } else if (action.UpdateFilterDetails.Active) {\n          Store.Filters.Active = action.UpdateFilterDetails.Active;\n        } else if (action.UpdateFilterDetails.SearchedText) {\n          Store.Filters.SearchedText = action.UpdateFilterDetails.SearchedText;\n        }\n\n        let FilteredList = sortRecords(Store.ItemList, Store.Filters);\n        return { ...Store,\n          Filters: { ...Store.Filters\n          },\n          FilteredItemList: [...FilteredList]\n        };\n      }\n\n    case ITEMLIST_UPDATE_ACTION:\n      {\n        if (action.UpdateActionDetails.Action === ACTIONOPTIONS.SELECTALL) {\n          Store.ItemList = Store.ItemList.map(item => {\n            return { ...item,\n              status: false\n            };\n          });\n        } else if (action.UpdateActionDetails.Action === ACTIONOPTIONS.DELETESELECTED) {\n          Store.ItemList = Store.ItemList.filter(item => item.status);\n        } else if (action.UpdateActionDetails.Action === ACTIONOPTIONS.DELETEALL) {\n          Store.ItemList = [];\n        }\n\n        let FilteredList = sortRecords(Store.ItemList, Store.Filters);\n        return { ...Store,\n          ItemList: [...Store.ItemList],\n          FilteredItemList: [...FilteredList]\n        };\n      }\n\n    default:\n      {\n        return { ...Store,\n          FilteredItemList: sortRecords(Store.ItemList, Store.Filters)\n        };\n      }\n  }\n};\n\n_c = Reducer;\nexport { Reducer };\n\nfunction sortRecords(storeRecords, filters) {\n  let FilteredList = storeRecords;\n\n  if (filters.SearchedText) {\n    FilteredList = FilteredList.filter(Item => Item.name.includes(filters.SearchedText));\n  }\n\n  if (filters.Active === SHOWSELECT.ACTIVE) {\n    FilteredList = FilteredList.filter(user => user.status);\n  } else if (filters.Active === SHOWSELECT.INACTIVE) {\n    FilteredList = FilteredList.filter(user => !user.status);\n  }\n\n  if (filters.Sort === SORT.AZ) {\n    FilteredList.sort((a, b) => a.name > b.name ? 1 : -1);\n  } else if (filters.Sort === SORT.ZA) {\n    FilteredList.sort((a, b) => a.name < b.name ? 1 : -1);\n  } else if (filters.Sort === SORT.Date_Ascending) {\n    FilteredList.sort((a, b) => a.time < b.time ? 1 : -1);\n  } else if (filters.Sort === SORT.Date_Descending) {\n    FilteredList.sort((a, b) => a.time > b.time ? 1 : -1);\n  }\n\n  return FilteredList;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"names":["ADD_ACTION","UPDATE_ACTION","REMOVE_ACTION","STATUS_UPDATE_ACTION","SORT","FILTER_UPDATE_ACTION","SHOWSELECT","ITEMLIST_UPDATE_ACTION","ACTIONOPTIONS","StoreData","ItemList","id","name","time","status","Filters","Sort","AZ","SearchedText","Active","ALL","Reducer","Store","action","type","push","length","AddDetails","NewValue","Date","toLocaleString","FilteredItems","sortRecords","FilteredItemList","forEach","Item","UpdateDetails","EditDetails","Updatevalue","filter","item","RemoveDetails","UpdateFilterDetails","FilteredList","UpdateActionDetails","Action","SELECTALL","map","DELETESELECTED","DELETEALL","storeRecords","filters","includes","ACTIVE","user","INACTIVE","sort","a","b","ZA","Date_Ascending","Date_Descending"],"sources":["D:/React-Learning/React-Learning/src/Redux/Reducer.js"],"sourcesContent":["\r\nimport { ADD_ACTION, UPDATE_ACTION, REMOVE_ACTION, STATUS_UPDATE_ACTION, SORT, FILTER_UPDATE_ACTION, SHOWSELECT, ITEMLIST_UPDATE_ACTION, ACTIONOPTIONS } from './Constants'\r\n\r\nconst StoreData = {\r\n    ItemList: [\r\n        { id: 1, name: 'abcd', time: \"6/6/2022, 7:06:52 PM\", status: false, },\r\n        { id: 3, name: 'mno', time: \"7/6/2022, 7:06:52 PM\", status: false, },\r\n        { id: 5, name: 'pqr', time: \"10/6/2022, 7:06:52 PM\", status: true, },\r\n        { id: 8, name: 'xyz', time: \"15/6/2022, 7:06:52 PM\", status: true, },\r\n    ],\r\n    Filters: {\r\n        Sort: SORT.AZ,\r\n        SearchedText: null,\r\n        Active: SHOWSELECT.ALL\r\n    }\r\n}\r\nconst Reducer = (Store = StoreData, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_ACTION: {\r\n            Store.ItemList.push({\r\n                id: Store.ItemList.length + 1,\r\n                name: action.AddDetails.NewValue,\r\n                time: new Date().toLocaleString(),\r\n                status: true,\r\n            })\r\n\r\n            let FilteredItems = sortRecords(Store.ItemList, { ...Store.Filters, SearchedText: null })\r\n            return {\r\n                ...Store, ItemList: [...Store.ItemList], FilteredItemList: [...FilteredItems],\r\n                Filters: { ...Store.Filters, SearchedText: null }\r\n            }\r\n        }\r\n\r\n        case UPDATE_ACTION: {\r\n            Store.ItemList.forEach(Item => {\r\n                if (Item.id === action.UpdateDetails.EditDetails.id) {\r\n                    Item.name = action.UpdateDetails.Updatevalue\r\n                }\r\n            })\r\n            let FilteredItems = sortRecords(Store.ItemList, { ...Store.Filters, SearchedText: null })\r\n            return { ...Store, ItemList: [...Store.ItemList], FilteredItemList: [...FilteredItems], }\r\n        }\r\n\r\n        case REMOVE_ACTION: {\r\n            return { ...Store, ItemList: Store.ItemList.filter(item => item.id !== action.RemoveDetails.id) }\r\n        }\r\n\r\n        case STATUS_UPDATE_ACTION: {\r\n            Store.ItemList.forEach(Item => {\r\n                if (Item.id === action.UpdateDetails.id) {\r\n                    Item.status = !Item.status\r\n                }\r\n            })\r\n            let FilteredItems = sortRecords(Store.ItemList, { ...Store.Filters, SearchedText: null })\r\n            return { ...Store, ItemList: [...Store.ItemList], FilteredItemList: [...FilteredItems], }\r\n        }\r\n\r\n        case FILTER_UPDATE_ACTION: {\r\n\r\n            if (action.UpdateFilterDetails.Sort) {\r\n                Store.Filters.Sort = action.UpdateFilterDetails.Sort\r\n            }\r\n            else if (action.UpdateFilterDetails.Active) {\r\n                Store.Filters.Active = action.UpdateFilterDetails.Active\r\n            }\r\n            else if (action.UpdateFilterDetails.SearchedText) {\r\n                Store.Filters.SearchedText = action.UpdateFilterDetails.SearchedText\r\n            }\r\n            let FilteredList = sortRecords(Store.ItemList, Store.Filters)\r\n\r\n            return { ...Store, Filters: { ...Store.Filters }, FilteredItemList: [...FilteredList] }\r\n        }\r\n\r\n        case ITEMLIST_UPDATE_ACTION: {\r\n\r\n            if (action.UpdateActionDetails.Action === ACTIONOPTIONS.SELECTALL) {\r\n                Store.ItemList = Store.ItemList.map(item => { return { ...item, status: false } })\r\n            }\r\n            else if (action.UpdateActionDetails.Action === ACTIONOPTIONS.DELETESELECTED) {\r\n                Store.ItemList = Store.ItemList.filter(item => item.status)\r\n            }\r\n            else if (action.UpdateActionDetails.Action === ACTIONOPTIONS.DELETEALL) {\r\n                Store.ItemList = []\r\n            }\r\n            let FilteredList = sortRecords(Store.ItemList, Store.Filters)\r\n\r\n            return { ...Store, ItemList: [...Store.ItemList], FilteredItemList: [...FilteredList] }\r\n        }\r\n        default: {\r\n            return { ...Store, FilteredItemList: sortRecords(Store.ItemList, Store.Filters) }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport { Reducer }\r\n\r\n\r\nfunction sortRecords(storeRecords, filters) {\r\n\r\n    let FilteredList = storeRecords;\r\n    if (filters.SearchedText) {\r\n        FilteredList = FilteredList.filter((Item) => Item.name.includes(filters.SearchedText))\r\n    }\r\n    if (filters.Active === SHOWSELECT.ACTIVE) {\r\n        FilteredList = FilteredList.filter((user) => user.status)\r\n    }\r\n    else if (filters.Active === SHOWSELECT.INACTIVE) {\r\n        FilteredList = FilteredList.filter((user) => !user.status)\r\n    }\r\n\r\n    if (filters.Sort === SORT.AZ) {\r\n        FilteredList.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n    }\r\n    else if (filters.Sort === SORT.ZA) {\r\n        FilteredList.sort((a, b) => (a.name < b.name) ? 1 : -1);\r\n    }\r\n    else if (filters.Sort === SORT.Date_Ascending) {\r\n        FilteredList.sort((a, b) => (a.time < b.time) ? 1 : -1);\r\n    }\r\n    else if (filters.Sort === SORT.Date_Descending) {\r\n        FilteredList.sort((a, b) => (a.time > b.time) ? 1 : -1);\r\n    }\r\n\r\n    return FilteredList\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}