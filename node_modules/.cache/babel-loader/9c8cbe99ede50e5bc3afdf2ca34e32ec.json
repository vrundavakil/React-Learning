{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Learning\\\\React-Learning\\\\src\\\\Components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useCountdown } from \"./useCountdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction setCountdown(days, hours, minutes, seconds) {\n  if (days + hours + minutes + seconds <= 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expired-notice\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Expired!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a future date and time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-counter\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\n\nconst CountdownTimer = () => {\n  _s();\n\n  const data = [{\n    id: '1',\n    date: '2022-12-07 15:00:00'\n  }, {\n    id: '1',\n    date: '2022-12-07 15:15:00'\n  }, {\n    id: '1',\n    date: '2022-12-07 15:30:00'\n  }, {\n    id: '1',\n    date: '2022-12-07 15:45:00'\n  }];\n  setCountdown(useCountdown(new Date(\"2022-12-07 15:30:00\")));\n  return;\n};\n\n_s(CountdownTimer, \"nHBTWJspynJAmU7S/jWwKtBnEs4=\", false, function () {\n  return [useCountdown];\n});\n\n_c = CountdownTimer;\nexport default CountdownTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"sources":["D:/React-Learning/React-Learning/src/Components/CountdownTimer.js"],"names":["React","useEffect","useState","Fragment","useCountdown","setCountdown","days","hours","minutes","seconds","CountdownTimer","data","id","date","Date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqD;AACjD,MAAIH,IAAI,GAAGC,KAAP,GAAeC,OAAf,GAAyBC,OAAzB,IAAoC,CAAxC,EAA2C;AACvC,wBAAO;AAAA,6BACH;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAMH,GAPD,MAOO;AACH,wBAAO;AAAA,6BACH;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAA,qBAAOH,IAAP,SAAgBC,KAAhB,SAA0BC,OAA1B,SAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAKH;AACJ;;AAED,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADS,EAIN;AACCD,IAAAA,EAAE,EAAE,GADL;AAECC,IAAAA,IAAI,EAAE;AAFP,GAJM,EAON;AACCD,IAAAA,EAAE,EAAE,GADL;AAECC,IAAAA,IAAI,EAAE;AAFP,GAPM,EAUN;AACCD,IAAAA,EAAE,EAAE,GADL;AAECC,IAAAA,IAAI,EAAE;AAFP,GAVM,CAAb;AAgBAR,EAAAA,YAAY,CAACD,YAAY,CAAC,IAAIU,IAAJ,CAAS,qBAAT,CAAD,CAAb,CAAZ;AAGA;AAEH,CAvBD;;GAAMJ,c;UAkBWN,Y;;;KAlBXM,c;AAyBN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useCountdown } from \"./useCountdown\";\r\n\r\nfunction setCountdown(days, hours, minutes, seconds) {\r\n    if (days + hours + minutes + seconds <= 0) {\r\n        return <>\r\n            <div className=\"expired-notice\">\r\n                <span>Expired!!!</span>\r\n                <p>Please select a future date and time.</p>\r\n            </div>\r\n        </>\r\n    } else {\r\n        return <>\r\n            <div className=\"show-counter\">\r\n                <span>{days} : {hours} : {minutes} : {seconds}</span>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst CountdownTimer = () => {\r\n\r\n    const data = [\r\n        {\r\n            id: '1',\r\n            date: '2022-12-07 15:00:00',\r\n        }, {\r\n            id: '1',\r\n            date: '2022-12-07 15:15:00',\r\n        }, {\r\n            id: '1',\r\n            date: '2022-12-07 15:30:00',\r\n        }, {\r\n            id: '1',\r\n            date: '2022-12-07 15:45:00',\r\n        },\r\n\r\n    ];\r\n    setCountdown(useCountdown(new Date(\"2022-12-07 15:30:00\")));\r\n\r\n\r\n    return\r\n\r\n}\r\n\r\nexport default CountdownTimer"]},"metadata":{},"sourceType":"module"}