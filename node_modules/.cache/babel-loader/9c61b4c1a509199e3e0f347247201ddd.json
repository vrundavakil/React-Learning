{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Learning\\\\React-Learning\\\\src\\\\Components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useCountdown } from \"./useCountdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpiredNotice = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expired-notice\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Expired!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a future date and time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpiredNotice;\n\nconst ShowCounter = _ref => {\n  let {\n    days,\n    hours,\n    minutes,\n    seconds\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-counter\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ShowCounter;\n\nconst DateTimeDisplay = _ref2 => {\n  let {\n    value,\n    type,\n    isDanger\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDanger ? 'countdown danger' : 'countdown',\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = DateTimeDisplay;\n\nconst CountdownTimer = () => {\n  _s();\n\n  const [days, hours, minutes, seconds] = useCountdown(new Date(\"2022-12-07 15:30:00\"));\n\n  if (days + hours + minutes + seconds <= 0) {\n    return /*#__PURE__*/_jsxDEV(ExpiredNotice, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ShowCounter, {\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CountdownTimer, \"k4nYSprLtbeXmgny6/HJFuVOyFU=\", false, function () {\n  return [useCountdown];\n});\n\n_c4 = CountdownTimer;\nexport default CountdownTimer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ExpiredNotice\");\n$RefreshReg$(_c2, \"ShowCounter\");\n$RefreshReg$(_c3, \"DateTimeDisplay\");\n$RefreshReg$(_c4, \"CountdownTimer\");","map":{"version":3,"sources":["D:/React-Learning/React-Learning/src/Components/CountdownTimer.js"],"names":["React","useEffect","useState","Fragment","useCountdown","ExpiredNotice","ShowCounter","days","hours","minutes","seconds","DateTimeDisplay","value","type","isDanger","CountdownTimer","Date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;KAAMA,a;;AASN,MAAMC,WAAW,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,GAAsC;AACvD,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAA,iBAAOH,IAAP,SAAgBC,KAAhB,SAA0BC,OAA1B,SAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMJ,W;;AAQN,MAAMK,eAAe,GAAG,SAA+B;AAAA,MAA9B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAA8B;AACnD,sBACI;AAAK,IAAA,SAAS,EAAEA,QAAQ,GAAG,kBAAH,GAAwB,WAAhD;AAAA,4BACI;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;MAAMF,e;;AASN,MAAMI,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACR,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,OAAvB,IAAkCN,YAAY,CAAC,IAAIY,IAAJ,CAAS,qBAAT,CAAD,CAApD;;AAEA,MAAIT,IAAI,GAAGC,KAAP,GAAeC,OAAf,GAAyBC,OAAzB,IAAoC,CAAxC,EAA2C;AACvC,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACI,QAAC,WAAD;AACI,MAAA,IAAI,EAAEH,IADV;AAEI,MAAA,KAAK,EAAEC,KAFX;AAGI,MAAA,OAAO,EAAEC,OAHb;AAII,MAAA,OAAO,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;AACJ,CAhBD;;GAAMK,c;UAEsCX,Y;;;MAFtCW,c;AAkBN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useCountdown } from \"./useCountdown\";\r\n\r\nconst ExpiredNotice = () => {\r\n    return (\r\n        <div className=\"expired-notice\">\r\n            <span>Expired!!!</span>\r\n            <p>Please select a future date and time.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ShowCounter = ({ days, hours, minutes, seconds }) => {\r\n    return (\r\n        <div className=\"show-counter\">\r\n            <span>{days} : {hours} : {minutes} : {seconds}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DateTimeDisplay = ({ value, type, isDanger }) => {\r\n    return (\r\n        <div className={isDanger ? 'countdown danger' : 'countdown'}>\r\n            <p>{value}</p>\r\n            <span>{type}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CountdownTimer = () => {\r\n\r\n    const [days, hours, minutes, seconds] = useCountdown(new Date(\"2022-12-07 15:30:00\"));\r\n\r\n    if (days + hours + minutes + seconds <= 0) {\r\n        return <ExpiredNotice />;\r\n    } else {\r\n        return (\r\n            <ShowCounter\r\n                days={days}\r\n                hours={hours}\r\n                minutes={minutes}\r\n                seconds={seconds}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountdownTimer"]},"metadata":{},"sourceType":"module"}