{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Learning\\\\React-Learning\\\\src\\\\Components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useCountdown } from \"./useCountdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpiredNotice = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expired-notice\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Expired!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a future date and time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpiredNotice;\n\nconst ShowCounter = _ref => {\n  let {\n    days,\n    hours,\n    minutes,\n    seconds\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-counter\",\n    children: [/*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n      value: days,\n      type: 'Days',\n      isDanger: days <= 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n      value: hours,\n      type: 'Hours',\n      isDanger: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n      value: minutes,\n      type: 'Mins',\n      isDanger: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DateTimeDisplay, {\n      value: seconds,\n      type: 'Seconds',\n      isDanger: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ShowCounter;\n\nconst DateTimeDisplay = _ref2 => {\n  let {\n    value,\n    type,\n    isDanger\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDanger ? 'countdown danger' : 'countdown',\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = DateTimeDisplay;\n\nconst CountdownTimer = () => {\n  _s();\n\n  const [days, hours, minutes, seconds] = useCountdown(new Date(\"2022-12-06 11:30:00\"));\n\n  if (days + hours + minutes + seconds <= 0) {\n    return /*#__PURE__*/_jsxDEV(ExpiredNotice, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ShowCounter, {\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CountdownTimer, \"k4nYSprLtbeXmgny6/HJFuVOyFU=\", false, function () {\n  return [useCountdown];\n});\n\n_c4 = CountdownTimer;\nexport default CountdownTimer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ExpiredNotice\");\n$RefreshReg$(_c2, \"ShowCounter\");\n$RefreshReg$(_c3, \"DateTimeDisplay\");\n$RefreshReg$(_c4, \"CountdownTimer\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","useCountdown","ExpiredNotice","ShowCounter","days","hours","minutes","seconds","DateTimeDisplay","value","type","isDanger","CountdownTimer","Date"],"sources":["D:/React-Learning/React-Learning/src/Components/CountdownTimer.js"],"sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useCountdown } from \"./useCountdown\";\r\n\r\nconst ExpiredNotice = () => {\r\n    return (\r\n        <div className=\"expired-notice\">\r\n            <span>Expired!!!</span>\r\n            <p>Please select a future date and time.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ShowCounter = ({ days, hours, minutes, seconds }) => {\r\n    return (\r\n        <div className=\"show-counter\">\r\n            <DateTimeDisplay value={days} type={'Days'} isDanger={days <= 3} />\r\n            <p>:</p>\r\n            <DateTimeDisplay value={hours} type={'Hours'} isDanger={false} />\r\n            <p>:</p>\r\n            <DateTimeDisplay value={minutes} type={'Mins'} isDanger={false} />\r\n            <p>:</p>\r\n            <DateTimeDisplay value={seconds} type={'Seconds'} isDanger={false} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DateTimeDisplay = ({ value, type, isDanger }) => {\r\n    return (\r\n        <div className={isDanger ? 'countdown danger' : 'countdown'}>\r\n            <p>{value}</p>\r\n            <span>{type}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CountdownTimer = () => {\r\n\r\n    const [days, hours, minutes, seconds] = useCountdown(new Date(\"2022-12-06 11:30:00\"));\r\n\r\n    if (days + hours + minutes + seconds <= 0) {\r\n        return <ExpiredNotice />;\r\n    } else {\r\n        return (\r\n            <ShowCounter\r\n                days={days}\r\n                hours={hours}\r\n                minutes={minutes}\r\n                seconds={seconds}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountdownTimer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EACxB,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAPD;;KAAMA,a;;AASN,MAAMC,WAAW,GAAG,QAAuC;EAAA,IAAtC;IAAEC,IAAF;IAAQC,KAAR;IAAeC,OAAf;IAAwBC;EAAxB,CAAsC;EACvD,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA,wBACI,QAAC,eAAD;MAAiB,KAAK,EAAEH,IAAxB;MAA8B,IAAI,EAAE,MAApC;MAA4C,QAAQ,EAAEA,IAAI,IAAI;IAA9D;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,eAAD;MAAiB,KAAK,EAAEC,KAAxB;MAA+B,IAAI,EAAE,OAArC;MAA8C,QAAQ,EAAE;IAAxD;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI,QAAC,eAAD;MAAiB,KAAK,EAAEC,OAAxB;MAAiC,IAAI,EAAE,MAAvC;MAA+C,QAAQ,EAAE;IAAzD;MAAA;MAAA;MAAA;IAAA,QALJ,eAMI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAOI,QAAC,eAAD;MAAiB,KAAK,EAAEC,OAAxB;MAAiC,IAAI,EAAE,SAAvC;MAAkD,QAAQ,EAAE;IAA5D;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAZD;;MAAMJ,W;;AAcN,MAAMK,eAAe,GAAG,SAA+B;EAAA,IAA9B;IAAEC,KAAF;IAASC,IAAT;IAAeC;EAAf,CAA8B;EACnD,oBACI;IAAK,SAAS,EAAEA,QAAQ,GAAG,kBAAH,GAAwB,WAAhD;IAAA,wBACI;MAAA,UAAIF;IAAJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAOC;IAAP;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAPD;;MAAMF,e;;AASN,MAAMI,cAAc,GAAG,MAAM;EAAA;;EAEzB,MAAM,CAACR,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,OAAvB,IAAkCN,YAAY,CAAC,IAAIY,IAAJ,CAAS,qBAAT,CAAD,CAApD;;EAEA,IAAIT,IAAI,GAAGC,KAAP,GAAeC,OAAf,GAAyBC,OAAzB,IAAoC,CAAxC,EAA2C;IACvC,oBAAO,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFD,MAEO;IACH,oBACI,QAAC,WAAD;MACI,IAAI,EAAEH,IADV;MAEI,KAAK,EAAEC,KAFX;MAGI,OAAO,EAAEC,OAHb;MAII,OAAO,EAAEC;IAJb;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH;AACJ,CAhBD;;GAAMK,c;UAEsCX,Y;;;MAFtCW,c;AAkBN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}